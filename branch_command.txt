원격 저장소 변경 방법
1. 기존 원격 url확인
   git remote -v
2. 기존 원격 저장소 URL 수정
   git remote set-url origin (깃 링크)

협업자와 함께 작업할 때 추가 팁
1. 작업 전 항상 최신 코드 확인
   git pull                     # 원격 저장소의 최신 변경사항 가져오기
2. 각자 다른 브랜치에서 작업
EX. 팀원 A: feature/login
    팀원 B: feature/payment

매일 작업 시작할 때
1. 최신 코드 가져오기
   git checkout main                 # 메인 브랜치로 전환
   git pull                          # 원격 저장소의 최신 변경사항 가져오기

2. 오늘의 작업 브랜치 만들기 (날짜나 기능 이름으로)
   git checkout -b feature/날짜-작업내용   # 예: feature/0315-login

작업 중간에 (수시로)
1. 변경사항 저장하기
   git add .                         # 모든 변경사항 스테이징
   git commit -m "작업 내용 설명"      # 변경사항 커밋
2. 백업하기 (중요한 지점에서)
   git push -u origin feature/날짜-작업내용  # 원격 저장소에 푸시

//
작업 종료할 때
1. 오늘의 작업 정리하기
   git add .                         # 모든 변경사항 스테이징
   git commit -m "오늘의 작업 완료"    # 변경사항 커밋
   git push -u origin feature/날짜-작업내용  # 원격 저장소에 푸시

2. 백업 브랜치 만들기 (추가 안전장치로)
   git checkout -b backup/날짜        # 예: backup/0315
   git push -u origin backup/날짜     # 백업 브랜치 원격 저장소에 푸시

작업이 완료되어 메인 브랜치에 병합
1. 최신 메인 브랜치 내용 가져오기
   git checkout main
   git pull

2. 작업 브랜치에 메인 브랜치 내용 병합하기 (충돌 해결)
   git checkout feature/날짜-작업내용
   git merge main
   
3. 메인 브랜치에 작업 내용 병합하기
   git checkout main
   git merge feature/날짜-작업내용
   git push                          # 메인 브랜치 푸시

문제가 생겼을 때 복구하는 방법
1. 작업 중 문제가 생겼을 때 (아직 커밋하지 않은 경우)
   git checkout -- .                 # 모든 변경사항 취소하고 마지막 커밋 상태로 복원
2. 커밋 후 문제가 생겼을 때
   git log                           # 커밋 기록 확인
   git reset --hard 커밋ID           # 특정 커밋으로 되돌리기
3. 백업 브랜치에서 복구하기
   git checkout backup/날짜           # 백업 브랜치로 전환
   git checkout -b recovery/날짜      # 복구용 새 브랜치 생성

git레퍼지토리에서 .env 관련된 파일 지우는 법
git rm --cached .env .env.production
git commit -m "🔒 Remove .env and .env.production from tracking"
git push origin main